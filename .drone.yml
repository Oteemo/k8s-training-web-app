pipeline: 

  install_requirements_and_test:
    image: node:9.6.1
    commands:
    - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' >> /etc/apt/sources.list
    - apt-get update && apt-get install --no-install-recommends -y google-chrome-stable
    - cd k8s-training-app
    - npm install
    - npm install -g @angular/cli@7.2.1
    - ng test --browsers Chrome_without_sandbox --watch=false

    
  build_and_publish_to_dev:
    image: oteemo/aws-docker-cli:v0.1
    environment:
      # Replace this with the url to your ecr repo
      - ECR_REPO=<ecr repo uri>
    commands:
      - eval $(aws ecr get-login --no-include-email --region=us-east-1)
      - docker build -t 
        $${ECR_REPO}:dev-${DRONE_COMMIT_SHA:0:8} .
      - docker push 
        $${ECR_REPO}:dev-${DRONE_COMMIT_SHA:0:8}
      - docker rmi 
        $${ECR_REPO}:dev-${DRONE_COMMIT_SHA:0:8}
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master

  publish_to_prod:
    image: oteemo/aws-docker-cli:v0.1
    environment:
      # Replace this with the url to your ecr repo
      - ECR_REPO=<ecr repo uri>
    commands:
      - eval $(aws ecr get-login --no-include-email --region=us-east-1)
      - docker pull 
        $${ECR_REPO}:dev-${DRONE_COMMIT_SHA:0:8}
      - docker tag 
        $${ECR_REPO}:dev-${DRONE_COMMIT_SHA:0:8} 
        $${ECR_REPO}:prod-${DRONE_COMMIT_SHA:0:8}
      - docker push 
        $${ECR_REPO}:prod-${DRONE_COMMIT_SHA:0:8}
      - docker rmi 
        $${ECR_REPO}:dev-${DRONE_COMMIT_SHA:0:8} 
        $${ECR_REPO}:prod-${DRONE_COMMIT_SHA:0:8}
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master

  # notify:
  #   image: plugins/slack        
  #   webhook: https://hooks.slack.com/services/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
  #   channel: k8s-imageproc-web-app
  #   username: drone
  #   template: >
  #      {{#success build.status}}
  #        Build {{build.number}} succeeded. Good job.
  #         {{ build.link }}
  #       {{else}}
  #        Build {{build.number}} failed. Fix me please.
  #        {{ build.link }}
  #      {{/success}}